package com.example.sereincandle; // ƒê·∫£m b·∫£o ƒë√∫ng t√™n package c·ªßa b·∫°n

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences; // C·∫ßn import SharedPreferences
import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.example.sereincandle.network.ApiService;
import com.example.sereincandle.network.ServiceGenerator; // C·∫ßn import ServiceGenerator
import com.example.sereincandle.LoginRequest; // ƒê·∫£m b·∫£o import model LoginRequest
import com.example.sereincandle.LoginResponse; // ƒê·∫£m b·∫£o import model LoginResponse
import com.example.sereincandle.utils.SessionManager; // Import SessionManager

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

// L∆ØU √ù: ƒê√£ lo·∫°i b·ªè c√°c import Retrofit/Gson/OkHttpClient kh√¥ng c·∫ßn thi·∫øt
// v√¨ ch√∫ng ta s·∫Ω s·ª≠ d·ª•ng ServiceGenerator

public class MainActivity extends AppCompatActivity {

    private EditText etEmail, etPassword;
    private Button btnLogin, btnRegister;
    private TextView tvMessage;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // üîë B∆Ø·ªöC QUAN TR·ªåNG: Kh·ªüi t·∫°o ServiceGenerator v·ªõi Context c·ªßa ·ª©ng d·ª•ng
        // ƒêi·ªÅu n√†y cho ph√©p ServiceGenerator ƒë·ªçc Token t·ª´ SharedPreferences
        ServiceGenerator.init(getApplicationContext());

        // 1. √Ånh x·∫° c√°c th√†nh ph·∫ßn UI
        etEmail = findViewById(R.id.etEmail);
        etPassword = findViewById(R.id.etPassword);
        btnLogin = findViewById(R.id.btnLogin);
        btnRegister = findViewById(R.id.btnRegister);
        tvMessage = findViewById(R.id.tvMessage);

        // 2. Thi·∫øt l·∫≠p s·ª± ki·ªán l·∫Øng nghe cho n√∫t ƒêƒÉng nh·∫≠p
        btnLogin.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                performLogin();
            }
        });

        // 3. Thi·∫øt l·∫≠p s·ª± ki·ªán l·∫Øng nghe cho n√∫t ƒêƒÉng k√Ω
        btnRegister.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(MainActivity.this, RegisterActivity.class);
                startActivity(intent);
            }
        });
    }

    /**
     * Ph∆∞∆°ng th·ª©c x·ª≠ l√Ω vi·ªác l·∫•y d·ªØ li·ªáu v√† g·ªçi API, s·ª≠ d·ª•ng ServiceGenerator.
     */
    private void performLogin() {
        // L·∫•y d·ªØ li·ªáu t·ª´ c√°c tr∆∞·ªùng nh·∫≠p li·ªáu
        String email = etEmail.getText().toString().trim();
        String password = etPassword.getText().toString().trim();

        // 3. Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o c∆° b·∫£n
        if (email.isEmpty() || password.isEmpty()) {
            tvMessage.setText("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß Email v√† M·∫≠t kh·∫©u.");
            return;
        }

        // Kh·ªüi t·∫°o ƒë·ªëi t∆∞·ª£ng y√™u c·∫ßu
        LoginRequest loginRequest = new LoginRequest(email, password);

        // 4. Kh·ªüi t·∫°o ApiService th√¥ng qua ServiceGenerator
        // ServiceGenerator t·ª± ƒë·ªông t·∫°o Retrofit v√† OkHttpClient (Unsafe)
        ApiService apiService = ServiceGenerator.createService(ApiService.class);

        // 5. Th·ª±c hi·ªán cu·ªôc g·ªçi API
        Call<LoginResponse> call = apiService.login(loginRequest);

        // Hi·ªÉn th·ªã th√¥ng b√°o ƒëang x·ª≠ l√Ω
        tvMessage.setText("ƒêang ƒëƒÉng nh·∫≠p...");

        call.enqueue(new Callback<LoginResponse>() {
            @Override
            public void onResponse(Call<LoginResponse> call, Response<LoginResponse> response) {
                // Ki·ªÉm tra m√£ tr·∫°ng th√°i HTTP (v√≠ d·ª•: 200 OK, 401 Unauthorized,...)
                if (response.isSuccessful() && response.body() != null) {
                    LoginResponse loginResponse = response.body();

                    // L·∫•y token v√† user data
                    String token = loginResponse.getToken();
                    UserData userData = loginResponse.getData();

                    if (token != null && !token.isEmpty()) {
                        // **TH√ÄNH C√îNG:** L∆∞u th√¥ng tin v√†o SessionManager
                        SessionManager sessionManager = new SessionManager(MainActivity.this);
                        sessionManager.saveToken(token);

                        // L∆∞u th√¥ng tin user (role, name, email)
                        if (userData != null) {
                            sessionManager.saveRole(userData.getRoleName());
                            sessionManager.saveUserName(userData.getFullName());
                            sessionManager.saveUserEmail(userData.getEmail());
                        }

                        tvMessage.setText(""); // X√≥a th√¥ng b√°o

                        // ƒêi·ªÅu h∆∞·ªõng theo role
                        Intent intent;
                        if (userData != null && "Admin".equalsIgnoreCase(userData.getRoleName())) {
                            // Admin ‚Üí AdminHomeActivity
                            intent = new Intent(MainActivity.this, AdminHomeActivity.class);
                        } else {
                            // Customer ‚Üí HomePageActivity (nh∆∞ c≈©)
                            intent = new Intent(MainActivity.this, HomePageActivity.class);
                        }
                        startActivity(intent);

                        // K·∫øt th√∫c m√†n h√¨nh ƒëƒÉng nh·∫≠p
                        finish();
                    } else {
                        // TH·∫§T B·∫†I: Ph·∫£n h·ªìi 200 nh∆∞ng kh√¥ng c√≥ token (v√≠ d·ª•: l·ªói nghi·ªáp v·ª•)
                        tvMessage.setText("T√™n ƒëƒÉng nh·∫≠p ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng.");
                    }

                } else {
                    // ƒêƒÉng nh·∫≠p TH·∫§T B·∫†I (M√£ 4xx, 5xx,...)
                    try {
                        String errorBody = response.errorBody().string();
                        tvMessage.setText("ƒêƒÉng nh·∫≠p th·∫•t b·∫°i. Chi ti·∫øt: " + errorBody);
                        Log.e("API_ERROR", "Error body: " + errorBody);
                    } catch (Exception e) {
                        tvMessage.setText("ƒêƒÉng nh·∫≠p th·∫•t b·∫°i. M√£ l·ªói: " + response.code());
                        Log.e("API_ERROR", "Error reading body: " + e.getMessage());
                    }
                }
            }

            @Override
            public void onFailure(Call<LoginResponse> call, Throwable t) {
                // X·∫£y ra l·ªói k·∫øt n·ªëi m·∫°ng (SSL/Network)
                tvMessage.setText("L·ªói k·∫øt n·ªëi m·∫°ng: " + t.getMessage());
                Log.e("NETWORK_ERROR", "L·ªói: " + t.getMessage());
            }
        });
    }
}