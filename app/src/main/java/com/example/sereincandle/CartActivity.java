package com.example.sereincandle; // ƒê·∫£m b·∫£o ƒë√∫ng t√™n package c·ªßa b·∫°n

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;
import android.widget.Toast;

// ƒê·∫£m b·∫£o import ƒë√∫ng ƒë∆∞·ªùng d·∫´n cho c√°c l·ªõp sau:
import com.example.sereincandle.adapter.CartAdapter;
import com.example.sereincandle.models.CartResponse;
import com.example.sereincandle.models.CartItem;
import com.example.sereincandle.network.ApiService;
import com.example.sereincandle.network.ServiceGenerator;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

// Tri·ªÉn khai interface x√≥a
public class CartActivity extends AppCompatActivity
        implements CartAdapter.OnRemoveItemClickListener {

    private RecyclerView rvCartItems;
    private TextView tvTotalAmount;
    private CartAdapter adapter;
    private List<CartItem> cartItemList;
    private final DecimalFormat formatter = new DecimalFormat("#,### VND");

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_cart);

        // 1. √Ånh x·∫°
        rvCartItems = findViewById(R.id.rvCartItems);
        tvTotalAmount = findViewById(R.id.tvTotalAmount);

        // Kh·ªüi t·∫°o danh s√°ch
        cartItemList = new ArrayList<>();

        // 2. Thi·∫øt l·∫≠p RecyclerView
        // Truy·ªÅn 'this' (listener x√≥a) v√†o Adapter
        adapter = new CartAdapter(this, cartItemList, this);
        rvCartItems.setLayoutManager(new LinearLayoutManager(this));
        rvCartItems.setAdapter(adapter);

        // 3. T·∫£i d·ªØ li·ªáu gi·ªè h√†ng
        fetchCart();
    }

    /**
     * Ph∆∞∆°ng th·ª©c tri·ªÉn khai t·ª´ OnRemoveItemClickListener (X·ª≠ l√Ω khi nh·∫•p n√∫t X√≥a)
     * @param productId ID c·ªßa s·∫£n ph·∫©m c·∫ßn x√≥a
     */
    @Override
    public void onRemoveItemClick(int productId) {
        deleteItemFromCart(productId);
    }

    private void deleteItemFromCart(int productId) {
        ApiService apiService = ServiceGenerator.createService(ApiService.class);

        // G·ªçi API DELETE b·∫±ng productId
        Call<Void> call = apiService.deleteCartItem(productId);

        call.enqueue(new Callback<Void>() {
            @Override
            public void onResponse(Call<Void> call, Response<Void> response) {
                if (response.isSuccessful()) {
                    Toast.makeText(CartActivity.this, "ƒê√£ x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng.", Toast.LENGTH_SHORT).show();
                    // üí• QUAN TR·ªåNG: T·∫£i l·∫°i gi·ªè h√†ng ƒë·ªÉ c·∫≠p nh·∫≠t giao di·ªán
                    fetchCart();
                } else if (response.code() == 401) {
                    Toast.makeText(CartActivity.this, "L·ªói: Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i (Token h·∫øt h·∫°n).", Toast.LENGTH_LONG).show();
                } else {
                    Toast.makeText(CartActivity.this, "L·ªói x√≥a gi·ªè h√†ng: M√£ " + response.code(), Toast.LENGTH_LONG).show();
                    Log.e("CART_DELETE_ERROR", "Ph·∫£n h·ªìi l·ªói: " + response.code());
                }
            }

            @Override
            public void onFailure(Call<Void> call, Throwable t) {
                Toast.makeText(CartActivity.this, "L·ªói k·∫øt n·ªëi khi x√≥a: " + t.getMessage(), Toast.LENGTH_LONG).show();
            }
        });
    }


    /**
     * Ph∆∞∆°ng th·ª©c g·ªçi API ƒë·ªÉ l·∫•y th√¥ng tin gi·ªè h√†ng
     */
    private void fetchCart() {
        ApiService apiService = ServiceGenerator.createService(ApiService.class);
        Call<CartResponse> call = apiService.getCart();

        call.enqueue(new Callback<CartResponse>() {
            @Override
            public void onResponse(Call<CartResponse> call, Response<CartResponse> response) {
                if (response.isSuccessful() && response.body() != null) {
                    CartResponse cartResponse = response.body();

                    // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn
                    tvTotalAmount.setText(formatter.format(cartResponse.getTotalAmount()));

                    // C·∫≠p nh·∫≠t danh s√°ch item
                    List<CartItem> items = cartResponse.getItems();
                    if (items != null) {
                        adapter.updateItems(items);
                    }

                    Toast.makeText(CartActivity.this, "T·∫£i gi·ªè h√†ng th√†nh c√¥ng!", Toast.LENGTH_SHORT).show();
                } else {
                    // X·ª≠ l√Ω gi·ªè h√†ng tr·ªëng ho·∫∑c l·ªói kh√°c
                    tvTotalAmount.setText(formatter.format(0));
                    adapter.updateItems(new ArrayList<>()); // X√≥a danh s√°ch hi·ªán t·∫°i
                    Toast.makeText(CartActivity.this, "Gi·ªè h√†ng tr·ªëng ho·∫∑c L·ªói: " + response.code(), Toast.LENGTH_LONG).show();
                    Log.e("CART_API_ERROR", "L·ªói ph·∫£n h·ªìi: " + response.code());
                }
            }

            @Override
            public void onFailure(Call<CartResponse> call, Throwable t) {
                // X·ª≠ l√Ω l·ªói k·∫øt n·ªëi m·∫°ng
                tvTotalAmount.setText(formatter.format(0));
                Toast.makeText(CartActivity.this, "L·ªói k·∫øt n·ªëi m·∫°ng: " + t.getMessage(), Toast.LENGTH_LONG).show();
                Log.e("CART_NETWORK_FAILURE", "L·ªói: " + t.getMessage(), t);
            }
        });
    }
}